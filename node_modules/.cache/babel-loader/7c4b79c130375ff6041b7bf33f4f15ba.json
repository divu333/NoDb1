{"ast":null,"code":"import _classCallCheck from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/divya/Documents/GitHub/no-db1/src/components/ViewRecipe.js\";\nimport React, { Component } from 'react';\nimport '../components/ViewRecipe';\nimport axios from 'axios';\n\nvar ViewRecipe =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewRecipe, _Component);\n\n  function ViewRecipe() {\n    var _this;\n\n    _classCallCheck(this, ViewRecipe);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewRecipe).call(this));\n    _this.state = {\n      recipebox: []\n    };\n    return _this;\n  }\n\n  _createClass(ViewRecipe, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getRecipeList();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.getRecipeList();\n    }\n  }, {\n    key: \"getRecipeList\",\n    value: function getRecipeList() {\n      // axios.get(\"https://rakuten_webservice-rakuten-recipe-v1.p.rapidapi.com/services/api/Recipe\").then((response) => {\n      // \tthis.setState({ recipebox: response.data });\n      console.log(\"working\"); //\t});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = this.state.recipebox.map(function (product, index) {\n        return React.createElement(ViewRecipe, {\n          getRecipeList: function getRecipeList() {\n            return _this2.getRecipeList();\n          },\n          currentProduct: ViewRecipe,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, list);\n    }\n  }]);\n\n  return ViewRecipe;\n}(Component);\n\nexport default ViewRecipe;","map":{"version":3,"sources":["/Users/divya/Documents/GitHub/no-db1/src/components/ViewRecipe.js"],"names":["React","Component","axios","ViewRecipe","state","recipebox","getRecipeList","console","log","list","map","product","index"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,0BAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,U;;;;;AACL,wBAAa;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAW;AACVC,MAAAA,SAAS,EAAC;AADA,KAAX;AAFY;AAKZ;;;;yCACoB;AACpB,WAAKC,aAAL;AACA;;;yCACmB;AACnB,WAAKA,aAAL;AACA;;;oCACe;AACf;AACM;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAJS,CAKhB;AACC;;;6BACQ;AAAA;;AACR,UAAMC,IAAI,GAAG,KAAKL,KAAL,CAAWC,SAAX,CAAqBK,GAArB,CAAyB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACzD,eACC,oBAAC,UAAD;AACY,UAAA,aAAa,EAAE;AAAA,mBAAI,MAAI,CAACN,aAAL,EAAJ;AAAA,WAD3B;AAEC,UAAA,cAAc,EAAEH,UAFjB;AAGC,UAAA,GAAG,EAAES,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,OARY,CAAb;AASA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMH,IAAN,CAAP;AACA;;;;EA/BuBR,S;;AAiCzB,eAAeE,UAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport '../components/ViewRecipe';\nimport axios from 'axios'\n\nclass ViewRecipe extends Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state={\n\t\t\trecipebox:[]\n\t\t}\n\t}\n\tcomponentWillMount() {\n\t\tthis.getRecipeList();\n\t}\n\tcomponentDidUpdate(){\n\t\tthis.getRecipeList()\n\t}\n\tgetRecipeList() {\n\t\t// axios.get(\"https://rakuten_webservice-rakuten-recipe-v1.p.rapidapi.com/services/api/Recipe\").then((response) => {\n        // \tthis.setState({ recipebox: response.data });\n        \n        console.log(\"working\")\n\t//\t});\n\t}\n\trender() {\n\t\tconst list = this.state.recipebox.map((product, index) => {\n\t\t\treturn (\n\t\t\t\t<ViewRecipe\n                getRecipeList={()=>this.getRecipeList()}\n\t\t\t\t\tcurrentProduct={ViewRecipe}\n\t\t\t\t\tkey={index}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t\treturn <div>{list}</div>;\n\t}\n}\nexport default ViewRecipe;"]},"metadata":{},"sourceType":"module"}