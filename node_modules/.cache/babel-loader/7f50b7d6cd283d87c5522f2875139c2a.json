{"ast":null,"code":"import _classCallCheck from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/divya/Documents/GitHub/no-db1/src/components/ViewRecipe/ViewRecipe.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport viewRecipe from '../ViewRecipe/viewRecipe.css';\n\nvar ViewRecipe =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewRecipe, _Component);\n\n  function ViewRecipe() {\n    var _this;\n\n    _classCallCheck(this, ViewRecipe);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewRecipe).call(this));\n    _this.state = {\n      recipeBox: []\n    };\n    return _this;\n  }\n\n  _createClass(ViewRecipe, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/api/recipeBox').then(function (res) {\n        console.log(res.data);\n\n        _this2.setState({\n          recipeBox: res.data\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(props) {\n      if (props.match.params.id != this.props.match.params.id) {\n        this.setState({\n          name: \"\",\n          price: \"\",\n          image_url: \"\",\n          currentId: null\n        });\n      }\n    }\n  }, {\n    key: \"updateItem\",\n    value: function updateItem() {\n      var editedItem = {\n        name: this.state.name,\n        price: this.state.price,\n        image_url: this.state.image_url\n      };\n      axios.put('/api/inventory/' + this.state.currentId, editedItem).then(function () {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"viewRecipe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" Recipe List\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.state.recipeBox.map(function (recipeBox) {\n        return React.createElement(\"li\", {\n          key: recipeBox.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \" \", recipeBox.recipeName, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), recipeBox.ingredients, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), \" \", React.createElement(\"button\", {\n          onClick: _this3.updateItem(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"edit\"), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return ViewRecipe;\n}(Component);\n\nexport default ViewRecipe;","map":{"version":3,"sources":["/Users/divya/Documents/GitHub/no-db1/src/components/ViewRecipe/ViewRecipe.js"],"names":["React","Component","axios","viewRecipe","ViewRecipe","state","recipeBox","get","then","res","console","log","data","setState","props","match","params","id","name","price","image_url","currentId","editedItem","put","map","recipeName","ingredients","updateItem"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;IAEOC,U;;;;;AAEP,wBAAa;AAAA;;AAAA;;AACX;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAFW;AAKZ;;;;wCAGoB;AAAA;;AAEnBJ,MAAAA,KAAK,CAACK,GAAN,CAAU,gBAAV,EAA4BC,IAA5B,CAAkC,UAACC,GAAD,EAAS;AACxCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;;AACA,QAAA,MAAI,CAACC,QAAL,CAAe;AACdP,UAAAA,SAAS,EAAGG,GAAG,CAACG;AADF,SAAf;AAGF,OALD;AAOD;;;uCAEkBE,K,EAAM;AACvB,UAAGA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAAnB,IAAyB,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAApD,EAAuD;AACnD,aAAKJ,QAAL,CAAc;AACVK,UAAAA,IAAI,EAAE,EADI;AAEhBC,UAAAA,KAAK,EAAE,EAFS;AAGpBC,UAAAA,SAAS,EAAE,EAHS;AAIdC,UAAAA,SAAS,EAAE;AAJG,SAAd;AAMH;AACF;;;iCAEY;AACX,UAAMC,UAAU,GAAG;AACjBJ,QAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWa,IADA;AAEjBC,QAAAA,KAAK,EAAE,KAAKd,KAAL,CAAWc,KAFD;AAGjBC,QAAAA,SAAS,EAAE,KAAKf,KAAL,CAAWe;AAHL,OAAnB;AAMAlB,MAAAA,KAAK,CAACqB,GAAN,CAAU,oBAAoB,KAAKlB,KAAL,CAAWgB,SAAzC,EAAoDC,UAApD,EAAgEd,IAAhE,CAAqE,YAAM,CAC1E,CADD;AAED;;;6BACO;AAAA;;AAIN,aAED;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADL,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKH,KAAL,CAAWC,SAAX,CAAqBkB,GAArB,CAA0B,UAAAlB,SAAS;AAAA,eACnC;AAAI,UAAA,GAAG,EAAEA,SAAS,CAACW,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAyBX,SAAS,CAACmB,UAAnC,EAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA9C,OAAoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApD,EACCnB,SAAS,CAACoB,WADX,OACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADxB,OAC8B;AAAQ,UAAA,OAAO,EAAE,MAAI,CAACC,UAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD9B,OACgF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADhF,CADmC;AAAA,OAAnC,CADF,CAFL,CAFC;AAcE;;;;EA5DsB1B,S;;AA+D1B,eAAeG,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport viewRecipe from '../ViewRecipe/viewRecipe.css'\n\nclass  ViewRecipe extends Component  {\n\nconstructor(){\n  super()\n  this.state = {\n    recipeBox :[]\n  }\n}\n\n\ncomponentDidMount () {\n\n  axios.get('/api/recipeBox').then ((res) => {\n     console.log(res.data)\n     this.setState ({\n      recipeBox : res.data\n     })\n  })\n\n}\n\ncomponentDidUpdate(props){\n  if(props.match.params.id != this.props.match.params.id){\n      this.setState({\n          name: \"\",\n    price: \"\",\nimage_url: \"\",\n      currentId: null,\n      })\n  }\n}\n\nupdateItem() {\n  const editedItem = {\n    name: this.state.name,\n    price: this.state.price,\n    image_url: this.state.image_url\n  };\n\n  axios.put('/api/inventory/' + this.state.currentId, editedItem).then(() => {\n  });\n}\nrender(){ \n\n\n    \n  return ( \n   \n <div className=\"viewRecipe\">\n      <h1> Recipe List</h1>\n      <ul> \n      { this.state.recipeBox.map (recipeBox =>\n        <li key={recipeBox.id}> {recipeBox.recipeName}<br/> <br/> \n        {recipeBox.ingredients} <br/> <button onClick={this.updateItem()}>edit</button> <br/></li>\n\n        )}\n\n      </ul>\n </div>\n     );\n   }\n\n }\nexport default ViewRecipe;\n"]},"metadata":{},"sourceType":"module"}