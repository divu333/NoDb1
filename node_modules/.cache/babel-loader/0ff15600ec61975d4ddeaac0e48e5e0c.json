{"ast":null,"code":"import _classCallCheck from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/divya/Documents/GitHub/no-db1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/divya/Documents/GitHub/no-db1/src/components/ViewRecipe/ViewRecipe.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport viewRecipe from '../ViewRecipe/viewRecipe.css';\n\nvar ViewRecipe =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewRecipe, _Component);\n\n  function ViewRecipe() {\n    var _this;\n\n    _classCallCheck(this, ViewRecipe);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewRecipe).call(this));\n    _this.state = {\n      recipeBox: []\n    };\n    return _this;\n  }\n\n  _createClass(ViewRecipe, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/api/recipeBox').then(function (res) {\n        console.log(res.data);\n\n        _this2.setState({\n          recipeBox: res.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"viewRecipe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \" Recipe List\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.state.recipeBox.map(function (recipeBox) {\n        return React.createElement(\"li\", {\n          key: recipeBox.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \" \", recipeBox.recipeName, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), recipeBox.ingredients, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), \" \", React.createElement(\"button\", {\n          onClick: _this3.updaterecipe,\n          value: _this3.state.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \" Edit \"), \" \", React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \" Delete \"), \"  \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return ViewRecipe;\n}(Component);\n\nexport default ViewRecipe;","map":{"version":3,"sources":["/Users/divya/Documents/GitHub/no-db1/src/components/ViewRecipe/ViewRecipe.js"],"names":["React","Component","axios","viewRecipe","ViewRecipe","state","recipeBox","get","then","res","console","log","data","setState","map","id","recipeName","ingredients","updaterecipe"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;IAEOC,U;;;;;AAEP,wBAAa;AAAA;;AAAA;;AACX;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAFW;AAMZ;;;;wCAGoB;AAAA;;AAEnBJ,MAAAA,KAAK,CAACK,GAAN,CAAU,gBAAV,EAA4BC,IAA5B,CAAkC,UAACC,GAAD,EAAS;AACxCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;;AACA,QAAA,MAAI,CAACC,QAAL,CAAe;AACdP,UAAAA,SAAS,EAAGG,GAAG,CAACG;AADF,SAAf;AAGF,OALD;AAOD;;;6BAKO;AAAA;;AAIN,aAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKP,KAAL,CAAWC,SAAX,CAAqBQ,GAArB,CAA0B,UAAAR,SAAS;AAAA,eACnC;AAAI,UAAA,GAAG,EAAEA,SAAS,CAACS,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAyBT,SAAS,CAACU,UAAnC,EAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA9C,OAAoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApD,EACCV,SAAS,CAACW,WADX,OACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADxB,OAC8B;AAAQ,UAAA,OAAO,EAAG,MAAI,CAACC,YAAvB;AAAqC,UAAA,KAAK,EAAE,MAAI,CAACb,KAAL,CAAWU,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD9B,OACyG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADzG,QACoI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADpI,CADmC;AAAA,OAAnC,CADF,CAFA,CAFF;AAcA;;;;EA3CwBd,S;;AA8C1B,eAAeG,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport viewRecipe from '../ViewRecipe/viewRecipe.css'\n\nclass  ViewRecipe extends Component  {\n\nconstructor(){\n  super()\n  this.state = {\n    recipeBox :[]\n  }\n\n}\n\n\ncomponentDidMount () {\n\n  axios.get('/api/recipeBox').then ((res) => {\n     console.log(res.data)\n     this.setState ({\n      recipeBox : res.data\n     })\n  })\n\n}\n\n\n\n\nrender(){ \n\n\n    \n  return ( \n   \n    <div className=\"viewRecipe\">\n    <h1> Recipe List</h1>\n    <ul> \n    { this.state.recipeBox.map (recipeBox =>\n      <li key={recipeBox.id}> {recipeBox.recipeName}<br/> <br/> \n      {recipeBox.ingredients} <br/> <button onClick ={this.updaterecipe} value={this.state.id}> Edit </button> <button> Delete </button>  <br/></li>\n\n      )}\n\n    </ul>\n</div>\n   );\n }\n\n}\nexport default ViewRecipe;"]},"metadata":{},"sourceType":"module"}